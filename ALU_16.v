/* Generated by Yosys 0.18+40 (git sha1 42721b6a1, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module ALU_16(A, B, ALU_Op, ALU_Out, Overflow);
  wire [15:0] _00_;
  wire _01_;
  wire [15:0] _02_;
  wire [15:0] _03_;
  wire [16:0] _04_;
  wire _05_;
  wire [15:0] _06_;
  wire _07_;
  wire [15:0] _08_;
  wire _09_;
  wire [15:0] _10_;
  wire _11_;
  wire [15:0] _12_;
  input [15:0] A;
  wire [15:0] A;
  input [2:0] ALU_Op;
  wire [2:0] ALU_Op;
  output [15:0] ALU_Out;
  wire [15:0] ALU_Out;
  input [15:0] B;
  wire [15:0] B;
  output Overflow;
  wire Overflow;
  wire [15:0] alu_result;
  wire [16:0] tmp;
  assign _08_ = A & B;
  assign _09_ = ALU_Op == 3'h2;
  assign _10_ = A | B;
  assign _11_ = ALU_Op == 3'h4;
  assign _12_ = A ^ B;
  assign _01_ = ALU_Op == 3'h6;
  assign _02_ = A + B;
  function [15:0] \21 ;
    input [15:0] a;
    input [79:0] b;
    input [4:0] s;
    (* parallel_case *)
    casez (s)
      5'b????1:
        \21  = b[15:0];
      5'b???1?:
        \21  = b[31:16];
      5'b??1??:
        \21  = b[47:32];
      5'b?1???:
        \21  = b[63:48];
      5'b1????:
        \21  = b[79:64];
      default:
        \21  = a;
    endcase
  endfunction
  assign _03_ = \21 (_02_, { _12_, _10_, _08_, _06_, _00_ }, { _01_, _11_, _09_, _07_, _05_ });
  assign _04_ = { 1'h0, A } + { 1'h0, B };
  assign _00_ = A + B;
  assign _05_ = ALU_Op == 3'h0;
  assign _06_ = A - B;
  assign _07_ = ALU_Op == 3'h1;
  assign alu_result = _03_;
  assign tmp = _04_;
  assign ALU_Out = alu_result;
  assign Overflow = tmp[8];
endmodule
